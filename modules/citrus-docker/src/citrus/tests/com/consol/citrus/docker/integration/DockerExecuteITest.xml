<?xml version="1.0" encoding="UTF-8"?>
<spring:beans xmlns="http://www.citrusframework.org/schema/testcase"
              xmlns:spring="http://www.springframework.org/schema/beans"
              xmlns:docker="http://www.citrusframework.org/schema/docker/testcase"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://www.springframework.org/schema/beans 
                                  http://www.springframework.org/schema/beans/spring-beans.xsd
                                  http://www.citrusframework.org/schema/docker/testcase
                                  http://www.citrusframework.org/schema/docker/testcase/citrus-docker-testcase.xsd
                                  http://www.citrusframework.org/schema/testcase 
                                  http://www.citrusframework.org/schema/testcase/citrus-testcase.xsd">

  <testcase name="DockerExecuteITest">
    <meta-info>
      <author>Christoph Deppisch</author>
      <creationdate>2015-09-14</creationdate>
      <status>FINAL</status>
      <last-updated-by>Christoph Deppisch</last-updated-by>
      <last-updated-on>2015-09-14T00:00:00</last-updated-on>
    </meta-info>

    <description>Test docker container command execution with docker client.</description>

    <variables>
      <variable name="imageId" value="hello-world"></variable>
      <variable name="containerId" value="citrus_hello"></variable>
    </variables>

    <actions>
      <echo>
        <message>Validate docker API version</message>
      </echo>

      <docker:ping></docker:ping>

      <docker:version>
        <docker:expect>
          <docker:result>
            <![CDATA[
              {
                "Version":"1.7.1",
                "ApiVersion":"1.19",
                "GitCommit":"@ignore@",
                "GoVersion":"@ignore@",
                "Os":"@ignore@",
                "Arch":"@ignore@",
                "KernelVersion":"@ignore@"
              }
            ]]>
          </docker:result>
        </docker:expect>
      </docker:version>

      <echo>
        <message>Pull docker image '${imageId}'</message>
      </echo>

      <docker:pull image="${imageId}"
                   tag="latest"/>

      <echo>
        <message>Create container from docker image '${imageId}'</message>
      </echo>

      <docker:create image="${imageId}"
                     name="${containerId}">
        <docker:expect>
          <docker:result>
            <![CDATA[
              {"Id":"@ignore@","Warnings":null}
            ]]>
          </docker:result>
        </docker:expect>
      </docker:create>

      <echo>
        <message>Starting docker container '${containerId}'</message>
      </echo>

      <docker:start container="${containerId}"/>

      <docker:inspect container="${containerId}">
        <docker:expect>
          <docker:result>
            <![CDATA[
              {
                "Args":[],
                "Config":"@ignore@",
                "Created":"@ignore@",
                "Driver":"@ignore@",
                "ExecDriver":"@ignore@",
                "HostConfig":"@ignore@",
                "HostnamePath":"@ignore@",
                "HostsPath":"@ignore@",
                "Id":"@ignore@",
                "Image":"@ignore@",
                "MountLabel":"",
                "Name":"/citrus_hello",
                "NetworkSettings":"@ignore@",
                "Path":"/hello",
                "ProcessLabel":"",
                "ResolvConfPath":"@ignore@",
                "ExecIDs":null,
                "State":
                {
                  "Running":true,
                  "Paused":false,
                  "Pid": "@ignore@",
                  "ExitCode":0,
                  "StartedAt":"@ignore@",
                  "FinishedAt":"@ignore@"
                },
                "Volumes":{},
                "VolumesRW":{}
              }
            ]]>
          </docker:result>
        </docker:expect>
      </docker:inspect>
    </actions>

    <finally>
      <sleep milliseconds="300"/>

      <echo>
        <message>Removing docker container '${containerId}'</message>
      </echo>

      <docker:remove container="${containerId}"/>
    </finally>

  </testcase>
</spring:beans>